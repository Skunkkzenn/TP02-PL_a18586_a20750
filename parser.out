Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_BRACE
    COLON
    COMMA
    OPEN_BRACE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment_statement
Rule 5     statement -> print_statement
Rule 6     statement -> read_statement
Rule 7     assignment_statement -> VARIABLE EQUALS expression SEMICOLON
Rule 8     assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON
Rule 9     print_statement -> ESCREVER LPAREN expression RPAREN
Rule 10    print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON
Rule 11    read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression CONCAT expression
Rule 17    expression -> LPAREN expression RPAREN
Rule 18    expression -> NUMERO
Rule 19    expression -> STRING
Rule 20    expression -> VARIABLE

Terminals, with rules where they appear

CLOSE_BRACE          : 
COLON                : 
COLON_EQUALS         : 8
COMMA                : 
CONCAT               : 16
DIVIDE               : 15
EQUALS               : 7
ESCREVER             : 9 10
LPAREN               : 9 10 11 17
MINUS                : 13
NUMERO               : 18
OPEN_BRACE           : 
PLUS                 : 12
READ                 : 11
RPAREN               : 9 10 11 17
SEMICOLON            : 7 8 10 11
STRING               : 19
TIMES                : 14
VARIABLE             : 7 8 11 20
error                : 

Nonterminals, with rules where they appear

assignment_statement : 4
expression           : 7 8 9 10 12 12 13 13 14 14 15 15 16 16 17
print_statement      : 5
program              : 0
read_statement       : 6
statement            : 2 3
statements           : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . print_statement
    (6) statement -> . read_statement
    (7) assignment_statement -> . VARIABLE EQUALS expression SEMICOLON
    (8) assignment_statement -> . VARIABLE COLON_EQUALS expression SEMICOLON
    (9) print_statement -> . ESCREVER LPAREN expression RPAREN
    (10) print_statement -> . ESCREVER LPAREN expression RPAREN SEMICOLON
    (11) read_statement -> . READ LPAREN VARIABLE RPAREN SEMICOLON

    VARIABLE        shift and go to state 7
    ESCREVER        shift and go to state 8
    READ            shift and go to state 9

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    print_statement                shift and go to state 5
    read_statement                 shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment_statement
    (5) statement -> . print_statement
    (6) statement -> . read_statement
    (7) assignment_statement -> . VARIABLE EQUALS expression SEMICOLON
    (8) assignment_statement -> . VARIABLE COLON_EQUALS expression SEMICOLON
    (9) print_statement -> . ESCREVER LPAREN expression RPAREN
    (10) print_statement -> . ESCREVER LPAREN expression RPAREN SEMICOLON
    (11) read_statement -> . READ LPAREN VARIABLE RPAREN SEMICOLON

    $end            reduce using rule 1 (program -> statements .)
    VARIABLE        shift and go to state 7
    ESCREVER        shift and go to state 8
    READ            shift and go to state 9

    statement                      shift and go to state 10
    assignment_statement           shift and go to state 4
    print_statement                shift and go to state 5
    read_statement                 shift and go to state 6

state 3

    (3) statements -> statement .

    VARIABLE        reduce using rule 3 (statements -> statement .)
    ESCREVER        reduce using rule 3 (statements -> statement .)
    READ            reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment_statement .

    VARIABLE        reduce using rule 4 (statement -> assignment_statement .)
    ESCREVER        reduce using rule 4 (statement -> assignment_statement .)
    READ            reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) statement -> print_statement .

    VARIABLE        reduce using rule 5 (statement -> print_statement .)
    ESCREVER        reduce using rule 5 (statement -> print_statement .)
    READ            reduce using rule 5 (statement -> print_statement .)
    $end            reduce using rule 5 (statement -> print_statement .)


state 6

    (6) statement -> read_statement .

    VARIABLE        reduce using rule 6 (statement -> read_statement .)
    ESCREVER        reduce using rule 6 (statement -> read_statement .)
    READ            reduce using rule 6 (statement -> read_statement .)
    $end            reduce using rule 6 (statement -> read_statement .)


state 7

    (7) assignment_statement -> VARIABLE . EQUALS expression SEMICOLON
    (8) assignment_statement -> VARIABLE . COLON_EQUALS expression SEMICOLON

    EQUALS          shift and go to state 11
    COLON_EQUALS    shift and go to state 12


state 8

    (9) print_statement -> ESCREVER . LPAREN expression RPAREN
    (10) print_statement -> ESCREVER . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 13


state 9

    (11) read_statement -> READ . LPAREN VARIABLE RPAREN SEMICOLON

    LPAREN          shift and go to state 14


state 10

    (2) statements -> statements statement .

    VARIABLE        reduce using rule 2 (statements -> statements statement .)
    ESCREVER        reduce using rule 2 (statements -> statements statement .)
    READ            reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)


state 11

    (7) assignment_statement -> VARIABLE EQUALS . expression SEMICOLON
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 16

state 12

    (8) assignment_statement -> VARIABLE COLON_EQUALS . expression SEMICOLON
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 20

state 13

    (9) print_statement -> ESCREVER LPAREN . expression RPAREN
    (10) print_statement -> ESCREVER LPAREN . expression RPAREN SEMICOLON
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 21

state 14

    (11) read_statement -> READ LPAREN . VARIABLE RPAREN SEMICOLON

    VARIABLE        shift and go to state 22


state 15

    (20) expression -> VARIABLE .

    SEMICOLON       reduce using rule 20 (expression -> VARIABLE .)
    PLUS            reduce using rule 20 (expression -> VARIABLE .)
    MINUS           reduce using rule 20 (expression -> VARIABLE .)
    TIMES           reduce using rule 20 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 20 (expression -> VARIABLE .)
    CONCAT          reduce using rule 20 (expression -> VARIABLE .)
    RPAREN          reduce using rule 20 (expression -> VARIABLE .)


state 16

    (7) assignment_statement -> VARIABLE EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28


state 17

    (17) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 29

state 18

    (18) expression -> NUMERO .

    SEMICOLON       reduce using rule 18 (expression -> NUMERO .)
    PLUS            reduce using rule 18 (expression -> NUMERO .)
    MINUS           reduce using rule 18 (expression -> NUMERO .)
    TIMES           reduce using rule 18 (expression -> NUMERO .)
    DIVIDE          reduce using rule 18 (expression -> NUMERO .)
    CONCAT          reduce using rule 18 (expression -> NUMERO .)
    RPAREN          reduce using rule 18 (expression -> NUMERO .)


state 19

    (19) expression -> STRING .

    SEMICOLON       reduce using rule 19 (expression -> STRING .)
    PLUS            reduce using rule 19 (expression -> STRING .)
    MINUS           reduce using rule 19 (expression -> STRING .)
    TIMES           reduce using rule 19 (expression -> STRING .)
    DIVIDE          reduce using rule 19 (expression -> STRING .)
    CONCAT          reduce using rule 19 (expression -> STRING .)
    RPAREN          reduce using rule 19 (expression -> STRING .)


state 20

    (8) assignment_statement -> VARIABLE COLON_EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 30
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28


state 21

    (9) print_statement -> ESCREVER LPAREN expression . RPAREN
    (10) print_statement -> ESCREVER LPAREN expression . RPAREN SEMICOLON
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    RPAREN          shift and go to state 31
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28


state 22

    (11) read_statement -> READ LPAREN VARIABLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 32


state 23

    (7) assignment_statement -> VARIABLE EQUALS expression SEMICOLON .

    VARIABLE        reduce using rule 7 (assignment_statement -> VARIABLE EQUALS expression SEMICOLON .)
    ESCREVER        reduce using rule 7 (assignment_statement -> VARIABLE EQUALS expression SEMICOLON .)
    READ            reduce using rule 7 (assignment_statement -> VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (assignment_statement -> VARIABLE EQUALS expression SEMICOLON .)


state 24

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 33

state 25

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 34

state 26

    (14) expression -> expression TIMES . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 35

state 27

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 36

state 28

    (16) expression -> expression CONCAT . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression CONCAT expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMERO
    (19) expression -> . STRING
    (20) expression -> . VARIABLE

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 18
    STRING          shift and go to state 19
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 37

state 29

    (17) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28


state 30

    (8) assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON .

    VARIABLE        reduce using rule 8 (assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON .)
    ESCREVER        reduce using rule 8 (assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON .)
    READ            reduce using rule 8 (assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON .)


state 31

    (9) print_statement -> ESCREVER LPAREN expression RPAREN .
    (10) print_statement -> ESCREVER LPAREN expression RPAREN . SEMICOLON

    VARIABLE        reduce using rule 9 (print_statement -> ESCREVER LPAREN expression RPAREN .)
    ESCREVER        reduce using rule 9 (print_statement -> ESCREVER LPAREN expression RPAREN .)
    READ            reduce using rule 9 (print_statement -> ESCREVER LPAREN expression RPAREN .)
    $end            reduce using rule 9 (print_statement -> ESCREVER LPAREN expression RPAREN .)
    SEMICOLON       shift and go to state 39


state 32

    (11) read_statement -> READ LPAREN VARIABLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 40


state 33

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 12 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28

  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! CONCAT          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]


state 34

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 13 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    CONCAT          shift and go to state 28

  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! CONCAT          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]


state 35

    (14) expression -> expression TIMES expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 14 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
    CONCAT          shift and go to state 28

  ! CONCAT          [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]


state 36

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 15 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    CONCAT          shift and go to state 28

  ! CONCAT          [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]


state 37

    (16) expression -> expression CONCAT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 16 (expression -> expression CONCAT expression .)
    PLUS            reduce using rule 16 (expression -> expression CONCAT expression .)
    MINUS           reduce using rule 16 (expression -> expression CONCAT expression .)
    TIMES           reduce using rule 16 (expression -> expression CONCAT expression .)
    DIVIDE          reduce using rule 16 (expression -> expression CONCAT expression .)
    CONCAT          reduce using rule 16 (expression -> expression CONCAT expression .)
    RPAREN          reduce using rule 16 (expression -> expression CONCAT expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! CONCAT          [ shift and go to state 28 ]


state 38

    (17) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> LPAREN expression RPAREN .)


state 39

    (10) print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON .

    VARIABLE        reduce using rule 10 (print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON .)
    ESCREVER        reduce using rule 10 (print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 10 (print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 10 (print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON .)


state 40

    (11) read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON .

    VARIABLE        reduce using rule 11 (read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON .)
    ESCREVER        reduce using rule 11 (read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON .)
    READ            reduce using rule 11 (read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON .)
    $end            reduce using rule 11 (read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON .)

