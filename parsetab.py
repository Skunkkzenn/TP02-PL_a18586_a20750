
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCONCATCLOSE_BRACE COLON COLON_EQUALS COMMA CONCAT DIVIDE EQUALS ESCREVER LPAREN MINUS NUMERO OPEN_BRACE PLUS READ RPAREN SEMICOLON STRING TIMES VARIABLEprogram : statementsstatements : statements statementstatements : statementstatement : assignment_statement\n                 | print_statement\n                 | read_statementassignment_statement : VARIABLE EQUALS expression SEMICOLON\n                            | VARIABLE COLON_EQUALS expression SEMICOLONprint_statement : ESCREVER LPAREN expression RPAREN\n                       | ESCREVER LPAREN expression RPAREN SEMICOLONread_statement : READ LPAREN VARIABLE RPAREN SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression CONCAT expressionexpression : LPAREN expression RPARENexpression : NUMEROexpression : STRINGexpression : VARIABLE'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,10,11,12,13,14,17,23,24,25,26,27,28,30,31,39,40,],[7,7,-3,-4,-5,-6,-2,15,15,15,22,15,-7,15,15,15,15,15,-8,-9,-10,-11,]),'ESCREVER':([0,2,3,4,5,6,10,23,30,31,39,40,],[8,8,-3,-4,-5,-6,-2,-7,-8,-9,-10,-11,]),'READ':([0,2,3,4,5,6,10,23,30,31,39,40,],[9,9,-3,-4,-5,-6,-2,-7,-8,-9,-10,-11,]),'$end':([1,2,3,4,5,6,10,23,30,31,39,40,],[0,-1,-3,-4,-5,-6,-2,-7,-8,-9,-10,-11,]),'EQUALS':([7,],[11,]),'COLON_EQUALS':([7,],[12,]),'LPAREN':([8,9,11,12,13,17,24,25,26,27,28,],[13,14,17,17,17,17,17,17,17,17,17,]),'NUMERO':([11,12,13,17,24,25,26,27,28,],[18,18,18,18,18,18,18,18,18,]),'STRING':([11,12,13,17,24,25,26,27,28,],[19,19,19,19,19,19,19,19,19,]),'SEMICOLON':([15,16,18,19,20,31,32,33,34,35,36,37,38,],[-20,23,-18,-19,30,39,40,-12,-13,-14,-15,-16,-17,]),'PLUS':([15,16,18,19,20,21,29,33,34,35,36,37,38,],[-20,24,-18,-19,24,24,24,-12,-13,-14,-15,-16,-17,]),'MINUS':([15,16,18,19,20,21,29,33,34,35,36,37,38,],[-20,25,-18,-19,25,25,25,-12,-13,-14,-15,-16,-17,]),'TIMES':([15,16,18,19,20,21,29,33,34,35,36,37,38,],[-20,26,-18,-19,26,26,26,26,26,-14,-15,-16,-17,]),'DIVIDE':([15,16,18,19,20,21,29,33,34,35,36,37,38,],[-20,27,-18,-19,27,27,27,27,27,-14,-15,-16,-17,]),'CONCAT':([15,16,18,19,20,21,29,33,34,35,36,37,38,],[-20,28,-18,-19,28,28,28,28,28,28,28,-16,-17,]),'RPAREN':([15,18,19,21,22,29,33,34,35,36,37,38,],[-20,-18,-19,31,32,38,-12,-13,-14,-15,-16,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,],[3,10,]),'assignment_statement':([0,2,],[4,4,]),'print_statement':([0,2,],[5,5,]),'read_statement':([0,2,],[6,6,]),'expression':([11,12,13,17,24,25,26,27,28,],[16,20,21,29,33,34,35,36,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','grammar.py',18),
  ('statements -> statements statement','statements',2,'p_statements_multiple','grammar.py',22),
  ('statements -> statement','statements',1,'p_statements_single','grammar.py',26),
  ('statement -> assignment_statement','statement',1,'p_statement','grammar.py',30),
  ('statement -> print_statement','statement',1,'p_statement','grammar.py',31),
  ('statement -> read_statement','statement',1,'p_statement','grammar.py',32),
  ('assignment_statement -> VARIABLE EQUALS expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',36),
  ('assignment_statement -> VARIABLE COLON_EQUALS expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',37),
  ('print_statement -> ESCREVER LPAREN expression RPAREN','print_statement',4,'p_print_statement','grammar.py',42),
  ('print_statement -> ESCREVER LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','grammar.py',43),
  ('read_statement -> READ LPAREN VARIABLE RPAREN SEMICOLON','read_statement',5,'p_read_statement','grammar.py',48),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','grammar.py',54),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','grammar.py',55),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','grammar.py',56),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','grammar.py',57),
  ('expression -> expression CONCAT expression','expression',3,'p_expression_binop','grammar.py',58),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','grammar.py',71),
  ('expression -> NUMERO','expression',1,'p_expression_number','grammar.py',75),
  ('expression -> STRING','expression',1,'p_expression_string','grammar.py',79),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','grammar.py',83),
]
